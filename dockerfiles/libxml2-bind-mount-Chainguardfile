FROM cgr.dev/chainguard-private/adoptium-jre:adoptium-openjdk-17-dev AS chainguard-builder
ENV APK_LIST="libxml2"
USER 0

# Install specified packages during the build stage
# Comment out or remove if specified system-level packages do not need to be present during the build stage
RUN apk add --no-cache ${APK_LIST}

# Build a script used to install packages during the distroless stage
# The find commands allow us to avoid hardcoding the version number of libapk.so
RUN echo "cp /lib/libapk.so $(find /lib -name 'libapk.so*')" > /add_apks.sh
RUN echo "apk add --no-cache ${APK_LIST}" >> /add_apks.sh
RUN echo "rm $(find /lib -name 'libapk.so*')" >> /add_apks.sh
RUN cp $(find /lib -name 'libapk.so*') /lib/libapk.so

USER 65532

FROM cgr.dev/chainguard-private/adoptium-jre:adoptium-openjdk-17
COPY --from=chainguard-builder add_apks.sh add_apks.sh
USER 0
# Mount resources needed to install apks and run the install script
RUN --mount=type=bind,from=chainguard-builder,target=/sbin/apk,source=/sbin/apk \
   --mount=type=bind,from=chainguard-builder,target=/bin/busybox,source=/bin/busybox \
   --mount=type=bind,from=chainguard-builder,target=/bin/sh,source=/bin/sh \
   --mount=type=bind,from=chainguard-builder,target=/bin/cp,source=/bin/cp \
   --mount=type=bind,from=chainguard-builder,target=/bin/rm,source=/bin/rm \
   --mount=type=bind,from=chainguard-builder,target=/etc/apk/keys,source=/etc/apk/keys,rw \
   --mount=type=bind,from=chainguard-builder,target=/etc/apk/repositories,source=/etc/apk/repositories,rw \
   --mount=type=bind,from=chainguard-builder,target=/etc/apk/protected_paths.d,source=/etc/apk/protected_paths.d,rw \
   --mount=type=bind,from=chainguard-builder,target=/lib/libapk.so,source=/lib/libapk.so,rw \
   --mount=type=bind,from=chainguard-builder,target=/usr/lib/libcrypt.so.1,source=/usr/lib/libcrypt.so.1 \
   --mount=type=bind,from=chainguard-builder,target=/add_apks.sh,source=/add_apks.sh,rw \
   /bin/sh /add_apks.sh
USER 65532
